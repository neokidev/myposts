import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";

import { IconBrandGithubFilled } from "@tabler/icons-react";
import { useState } from "react";
import Image from "next/image";

const Home: NextPage = () => {
  const { data: sessionData, status } = useSession();
  const [isLoading, setIsLoading] = useState<boolean>(false);

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex min-h-screen flex-col bg-white text-black">
        <header className="sticky top-0 z-10 border-b border-b-slate-200">
          <div className="container">
            <div className="flex h-16 items-center justify-between py-4">
              <Link href="/">
                <span className="font-bold">myposts</span>
              </Link>
              {status === "unauthenticated" && (
                <button
                  onClick={() => {
                    setIsLoading(true);
                    signIn("github");
                  }}
                  disabled={isLoading}
                  className="inline-flex h-10 items-center justify-center rounded-md bg-slate-900 px-4 py-2 text-sm font-medium text-white transition-colors hover:bg-slate-700 focus:outline-none focus:ring-2 focus:ring-slate-400 focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=open]:bg-slate-100"
                >
                  Login with
                  <IconBrandGithubFilled size={18} className="ml-1" />
                </button>
              )}
              {status === "authenticated" &&
                sessionData.user?.image != null && (
                  <button
                    className="relative h-8 w-8 overflow-hidden rounded-full"
                    onClick={() => {
                      setIsLoading(true);
                      signOut();
                    }}
                    disabled={isLoading}
                  >
                    <Image src={sessionData.user.image} alt="avatar" fill />
                  </button>
                )}
            </div>
          </div>
        </header>
        <main className="container flex-1">
          {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        </main>
      </div>
    </>
  );
};

export default Home;
