import { Menu, Transition } from '@headlessui/react'
import { IconBrandGithubFilled } from '@tabler/icons-react'
import { type NextPage } from 'next'
import { signIn, signOut, useSession } from 'next-auth/react'
import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'
import { Fragment, useState } from 'react'

const Home: NextPage = () => {
  const { data: sessionData, status } = useSession()
  const [isLoading, setIsLoading] = useState<boolean>(false)

  return (
    <>
      <Head>
        <title>myposts</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex min-h-screen flex-col bg-white text-black">
        <header className="sticky top-0 z-10 border-b border-b-gray-200">
          <div className="container">
            <div className="flex h-16 items-center justify-between py-4">
              <Link href="/">
                <span className="font-bold">myposts</span>
              </Link>
              {status === 'unauthenticated' && (
                <button
                  onClick={() => {
                    setIsLoading(true)
                    signIn('github').catch(() => {
                      throw new Error('An error occurred while signing in')
                    })
                  }}
                  disabled={isLoading}
                  className="inline-flex h-10 items-center justify-center rounded-md bg-gray-900 px-4 py-2 text-sm font-medium text-white transition-colors hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-400 focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=open]:bg-gray-100"
                >
                  Login with
                  <IconBrandGithubFilled size={18} className="ml-1" />
                </button>
              )}
              {status === 'authenticated' && sessionData.user != null && (
                <Menu as="div" className="relative inline-block text-left">
                  <div>
                    <Menu.Button className="relative overflow-hidden rounded-full">
                      {sessionData.user.image != null ? (
                        <Image
                          src={sessionData.user.image}
                          alt="avatar"
                          width={32}
                          height={32}
                        />
                      ) : (
                        <></>
                      )}
                    </Menu.Button>
                  </div>
                  <Transition
                    as={Fragment}
                    enter="transition ease-out duration-100"
                    enterFrom="transform opacity-0 scale-95"
                    enterTo="transform opacity-100 scale-100"
                    leave="transition ease-in duration-75"
                    leaveFrom="transform opacity-100 scale-100"
                    leaveTo="transform opacity-0 scale-95"
                  >
                    <Menu.Items className="absolute right-0 mt-2 min-w-[12rem] origin-top-right divide-y divide-gray-100 rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none text-sm">
                      <div className="p-1">
                        <div className="px-2.5 py-1.5 space-y-0.5">
                          <div className="font-semibold">
                            {sessionData.user.name}
                          </div>
                          <div className="text-gray-400 text-xs">
                            {sessionData.user.email}
                          </div>
                        </div>
                      </div>
                      <div className="p-1">
                        <Menu.Item>
                          {({ active }) => (
                            <Link href="/dashboard">
                              <button
                                className={`${
                                  active ? 'bg-gray-100' : ''
                                } group flex w-full items-center rounded-md px-2.5 py-1.5`}
                              >
                                Dashboard
                              </button>
                            </Link>
                          )}
                        </Menu.Item>
                      </div>
                      <div className="p-1">
                        <Menu.Item>
                          {({ active }) => (
                            <button
                              className={`${
                                active ? 'bg-gray-100' : ''
                              } group flex w-full items-center rounded-md px-2.5 py-1.5`}
                              onClick={() => {
                                setIsLoading(true)
                                signOut().catch(() => {
                                  throw new Error(
                                    'An error occurred while signing out'
                                  )
                                })
                              }}
                              disabled={isLoading}
                            >
                              Sign out
                            </button>
                          )}
                        </Menu.Item>
                      </div>
                    </Menu.Items>
                  </Transition>
                </Menu>
              )}
            </div>
          </div>
        </header>
        <main className="container flex-1">
          {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        </main>
      </div>
    </>
  )
}

export default Home
