import { ProtectedLayout } from '@/components/Layout'
import Head from 'next/head'
import { useState, type FC, type ReactNode } from 'react'

type InnerBlankLayoutProps = {
  children: ReactNode
}

type BlankLayoutProps = {
  children: ReactNode
  isProtected?: boolean
}

const InnerBlankLayout: FC<InnerBlankLayoutProps> = ({ children }) => {
  return (
    <>
      <Head>
        <title>myposts</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {children}
    </>
  )
}

export const BlankLayout: FC<BlankLayoutProps> = ({
  children,
  isProtected,
}) => {
  const [_isProtected] = useState(isProtected)

  return (
    <>
      {_isProtected ? (
        <ProtectedLayout>
          <InnerBlankLayout>{children}</InnerBlankLayout>
        </ProtectedLayout>
      ) : (
        <InnerBlankLayout>{children}</InnerBlankLayout>
      )}
    </>
  )
}
